<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
    <link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
	<link
href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
rel="stylesheet"
/>
<!-- Google Fonts -->
<link
href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"
rel="stylesheet"
/>
<!-- MDB -->
<link
href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/6.4.2/mdb.min.css"
rel="stylesheet">
	<link rel="stylesheet" href="/css/admin/dashboard.css">
    <link rel="stylesheet" href="/css/user.css">
	<title>AdminSite</title>
</head>

<body>
	
	<!-- SIDEBAR -->
	<section id="sidebar">
		<a href="#" class="brand"><i class='bx bxs-smile icon'></i> AdminSite</a>
		<ul class="side-menu">
			<li><a href="/admin/adminhome" class="active" ><i class='bx bxs-dashboard icon' ></i> Dashboard</a></li>
			<li><a href='/admin/addproduct'><i class='bx bxs-inbox icon' ></i> Add Product</i></a></li>
			<li><a href='/admin/products' ><i class='bx bxs-chart icon' ></i> Products</a></li>
			<li><a href="/admin/categories"><i class='bx bxs-widget icon' ></i> Categories</a></li>
			<li><a href="/admin/userslist"><i class='bx bx-table icon' ></i> Users List</a></li>
			<li><a href="/admin/couponlist"><i class='bx bxs-notepad icon' ></i>Couponlist </a></li>
            <li><a href="/admin/adminorders"><i class='bx bx-table icon' ></i> Orders List</a></li>
            <li><a href="/admin/bannerlist"><i class='bx bxs-notepad icon' ></i>Bannerlist </a></li><br>
            <li><a href="/admin/blockedusers" style="color: rgb(251, 50, 50);"><i class='bx bx-table icon'  ></i>Blocked Users </a></li>
		</ul>
		
	</section>
	<!-- SIDEBAR -->

	<!-- NAVBAR -->
	<section id="content">
		<!-- NAVBAR -->
		<nav>
			<i class='bx bx-menu toggle-sidebar' ></i>
			<form action="#">
				<div class="form-group">
					<input type="text" placeholder="Search...">
					<i class='bx bx-search icon' ></i>
				</div>
			</form>
			<a href="#" class="nav-link">
				<i class='bx bxs-bell icon' ></i>
				<span class="badge">5</span>
			</a>
			<a href="#" class="nav-link">
				<i class='bx bxs-message-square-dots icon' ></i>
				<span class="badge">8</span>
			</a>
			<span class="divider"></span>
			<div class="profile">
				<img src="https://images.unsplash.com/photo-1517841905240-472988babdf9?ixid=MnwxMjA3fDB8MHxzZWFyY2h8NHx8cGVvcGxlfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60" alt="">
				<ul class="profile-link">
					<li><a href="#"><i class='bx bxs-user-circle icon' ></i> Profile</a></li>
					<li><a href="#"><i class='bx bxs-cog' ></i> Settings</a></li>
					<li><a href="#"><i class='bx bxs-log-out-circle' ></i> Logout</a></li>
				</ul>
			</div>
		</nav>
		<!-- NAVBAR -->

		<!-- MAIN -->
		<main>
			
			<h1 class="title">Dashboard</h1>
			<ul class="breadcrumbs">
				<li><a href="">Home</a></li>
				<li class="divider">/</li>
				<li><a href="#" class="active">Dashboard</a></li>
			</ul>
			<div class="info-data">
				<div class="card">
					<div class="head">
						<div>
							<h2>â‚¹ <%=total[0].totalSales%></h2>
							<p>Total Sales</p>
						</div>
						<i class='bx bx-trending-up icon' ></i>
					</div>
				</div>
				<div class="card">
					<div class="head">
						<div>
							<h2><%=products%></h2>
							<p>Products</p>
						</div>
						<i class='bx bx-trending-down icon down' ></i>
					</div>
				</div>
				<div class="card">
					<div class="head">
						<div>
							<h2>465</h2>
							<p>Pageviews</p>
						</div>
						<i class='bx bx-trending-up icon' ></i>
					</div>
				</div>
				<div class="card">
					<div class="head">
						<div>
							<h2>235</h2>
							<p>Visitors</p>
						</div>
						<i class='bx bx-trending-up icon' ></i>
					</div>
				</div>
			</div>
			<div class="data">
				<div class="content-data">
					<div class="head">
						<h3>Stock Report</h3>
						
					</div>
					<div class="chart">
						<div style="height: 90%;  width: 100%;">
							<canvas id="myChart"></canvas>
						  </div>
					</div>
				</div>
				<div class="content-data">
					<div class="head">
						<h3>Daily Sales Report</h3>
						
					</div>
					<div class="chat-box">
						<div class="chart" style="height: 100%;">
							<div style="margin-top: 25%;">
								<canvas id="myChart1"></canvas>
							  </div>
						</div>
					</div>
				</div>
				<div class="content-datas">
					<div class="head">
						<h3>Users Report</h3>
						
					</div>
					<div class="chat-box">
						<div class="chart" style="height: 100%;margin-top: 60px;">
							<div>
								<canvas id="myChart2"></canvas>
							  </div>
						</div>
					</div>
					
					
				</div>
			</div>
		</main>
		<!-- MAIN -->
	</section>
	<!-- NAVBAR -->


	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  const ctx = document.getElementById('myChart');


  document.addEventListener('DOMContentLoaded', async function() {
    try {
        const response = await fetch('/admin/dashboardstock', { method: 'GET', headers: { 'Content-Type': 'application/json' } });
        if (!response.ok) {
            throw new Error("Error deleting product: " + response.statusText);
        }
        const data = await response.json();
        if (data && data.category) {
            const category = data.category;
			const stock=data.total;
			new Chart(ctx, {
				type: 'doughnut',
				data: {
					labels: category,
					datasets: [{
						label: 'Stock',
						data: stock,
						borderWidth: 1
					}]
				},
				options: {
					scales: {
						y: {
							beginAtZero: true
						}
					}
				}
			});
		} else {
            console.log("Failed to get category count");
        }
    } catch (error) {
        console.error('Error deleting product:', error);
    }
});

  

const ctz = document.getElementById('myChart1');

document.addEventListener('DOMContentLoaded', async function() {
    try {
        const response = await fetch('/admin/dashboardsales', { method: 'GET', headers: { 'Content-Type': 'application/json' } });
        if (!response.ok) {
            throw new Error("Error getting sales data: " + response.statusText);
        }
        const data = await response.json();
        if (data && data.length > 0) {
            const dates = data.map(item => item.date.substring(0, 10));
            const sales = data.map(item => item.totalSales);
            new Chart(ctz, {
                type: 'line',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'Daily Sales',
                        data: sales,
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true,
                            suggestedMin: 0,
                            suggestedMax: Math.ceil(Math.max(...sales) / 1000) * 1000 // Round up to the nearest thousand
                        }
                    }
                }
            });
        } else {
            console.log("No sales data available");
        }
    } catch (error) {
        console.error('Error getting sales data:', error);
    }
});



const cty = document.getElementById('myChart2');

document.addEventListener('DOMContentLoaded', async function() {
    try {
        const response = await fetch('/admin/dashboardusers', { method: 'GET', headers: { 'Content-Type': 'application/json' } });
        if (!response.ok) {
            throw new Error("Error getting user data: " + response.statusText);
        }
        const data = await response.json();
        if (data && data.length > 0) {
            const dates = data.map(item => item.date.substring(0, 10));
            const counts = data.map(item => item.count);
            new Chart(cty, {
                type: 'bar',
                data: {
                    labels: dates,
                    datasets: [{
                        label: 'Signup Users Count',
                        data: counts,
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        } else {
            console.log("No user data available");
        }
    } catch (error) {
        console.error('Error getting user data:', error);
    }
});



  

  
</script>
<script src="/js/script.js"></script>
</body>
</html>